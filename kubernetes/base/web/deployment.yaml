kind: Deployment
apiVersion: apps/v1

metadata:
  name: web

spec:
  replicas: 1
  revisionHistoryLimit: 1
  selector:
    matchLabels:
      name: web
  strategy:
    type: RollingUpdate
    rollingUpdate:
      maxUnavailable: 0
      maxSurge: 1
  template:
    metadata:
      labels:
        name: web
    spec:
      containers:
      - name: web
        image: ghcr.io/gw2treasures/gw2.me/web:latest
        imagePullPolicy: IfNotPresent
        resources:
          requests:
            memory: "128Mi"
            cpu: "50m"
          limits:
            memory: "512Mi"
            cpu: "1"
        env:
        - name: DATABASE_URL
          valueFrom:
            configMapKeyRef:
              name: web
              key: db
        - name: BASE_DOMAIN
          valueFrom:
            configMapKeyRef:
              name: web
              key: domain
        - name: DISCORD_CLIENT_ID
          valueFrom:
            configMapKeyRef:
              name: web
              key: discord_client_id
              optional: true
        - name: DISCORD_CLIENT_SECRET
          valueFrom:
            configMapKeyRef:
              name: web
              key: discord_client_secret
              optional: true
        ports:
        - containerPort: 3000
          protocol: TCP
        readinessProbe:
          httpGet:
            port: 3000
            path: "/api/health"
          initialDelaySeconds: 3
          timeoutSeconds: 1
          failureThreshold: 3
          periodSeconds: 5
        livenessProbe:
          httpGet:
            port: 3000
            path: "/api/health"
          initialDelaySeconds: 30
          timeoutSeconds: 1
          failureThreshold: 6
        terminationMessagePath: /dev/termination-log
        terminationMessagePolicy: File
      dnsPolicy: ClusterFirst
      restartPolicy: Always
      schedulerName: default-scheduler
      securityContext: {}
      terminationGracePeriodSeconds: 30    
